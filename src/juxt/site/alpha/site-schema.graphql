schema {
  query: Query
}

"""
Root query object
"""
type Query {
  """
  Access user details for all users in the system
  """
  allUsers: [User]
  @xtdb(q: """
    {:find [e] :where [[e :juxt.site.alpha/type "User"]]}
    """)

  """
  Access a single user's details
  """
  user(username: String!): [User]
  @xtdb(q: """
    {:find [e]
    :where
    [
     [e :juxt.site.alpha/type "User"]
     [e :juxt.pass.alpha/username username]]}
    """)

  """
  Access Site's configuration
  """
  configuration: String @site(resolver: "juxt.site.alpha.graphql-resolver/config")

  """
  Access Site's status
  """
  status: String @site(resolver: "juxt.site.alpha.graphql-resolver/status")

  """
  Access Site's system
  """
  system: String @site(resolver: "juxt.site.alpha.graphql-resolver/system")
}

"""
An object representing a Site user. Anyone who needs to log in to the system must have a user record.
"""
type User {
  id: ID @xtdb(a: "crux.db/id")
  username: String @xtdb(a: "juxt.pass.alpha/username")
  name: String @xtdb(a: "name")
  email: String @xtdb(a: "email")
  roles: [Role] @xtdb(q: """
    {:find [role]
    :where
    [[role :juxt.site.alpha/type "Role"]
     [mapping :juxt.site.alpha/type "UserRoleMapping"]
     [mapping :juxt.pass.alpha/assignee object]
     [mapping :juxt.pass.alpha/role role]]}
""")
}

"""
A Site role, for using in policies to grant authorization to access certain resources.
"""
type Role {
  id: ID @xtdb(a: "crux.db/id")
  name: String @xtdb(a: "name")
  description: String @xtdb(a: "description")
}
