{:roles
 {}

 :users
 {
  "/_crux/pass/users/juxtmal"
  {:name "Malcolm Sparks"
   :email "mal@juxt.pro"
   :password "HarryFord1782"}}

 ;; Rules have targets which match a request context
 ;; A target is a set of constraints
 ;; There are some pre-bound symbols that can be used in these constraints:
 ;; request - a Crux entity representing the request
 ;; resource - a Crux entity representing the resource
 ;; (coming soon: action and environment)
 ;;
 ;; A rule has an effect, either to allow or deny the request If the rule is
 ;; allowed, further 'advice' is provided which can be used by the system to
 ;; restrict visibility (e.g. limiting-clauses)
 :rules
 {


  ;; Commented this out because it's not strict enough, and possibly dangerous
  ;; in the presence of a local reverse-proxy. Need to test and use potentially
  ;; another header such as
  #_"/_crux/pass/rules/selmer-local-template-access"
  #_{:description "Allow Selmer local access to templates"
   :target [[request :remote-addr #{"0:0:0:0:0:0:0:1" "127.0.0.1"}]]
   :effect :allow}

  "/_crux/pass/rules/test"
  {:description "/test.html is open"
   :target [[request :uri "/test.html"]]
   :effect :allow}

  }}
